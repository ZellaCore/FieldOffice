{"remainingRequest":"/home/ian/Codes/fo-git/FieldOffice/node_modules/babel-loader/lib/index.js??ref--1-1!/home/ian/Codes/fo-git/FieldOffice/gridsome.server.js","dependencies":[{"path":"/home/ian/Codes/fo-git/FieldOffice/gridsome.server.js","mtime":1554949135945},{"path":"/home/ian/Codes/fo-git/FieldOffice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ian/Codes/fo-git/FieldOffice/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/ian/Codes/fo-git/FieldOffice/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n// Server API makes it possible to hook into various parts of Gridsome\n// on server-side and add custom data to the GraphQL data layer.\n// Learn more: https://gridsome.org/docs/server-api\n// Changes here require a server restart.\n// To restart press CTRL + C in terminal and run `gridsome develop`\nvar axios = require('axios');\n\nmodule.exports = function (api) {\n  api.loadSource(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(store) {\n      var _ref2, data, contentType, item, path;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('http://192.168.0.17:15000/api/employee');\n\n            case 2:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              console.log(data);\n              contentType = store.addContentType({\n                typeName: 'Employee',\n                route: '/employee/:id'\n              });\n\n              for (item in data.objects) {\n                path = \"/employee/\".concat(item.id);\n                contentType.addNode({\n                  id: item.id,\n                  eid: item.eid,\n                  firstname: item.firstname,\n                  lastname: item.lastname,\n                  occupation: item.occupation,\n                  path: path,\n                  fields: {\n                    body: item.registration\n                  }\n                });\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n};",{"version":3,"sources":["/home/ian/Codes/fo-git/FieldOffice/gridsome.server.js"],"names":["axios","require","module","exports","api","loadSource","store","get","data","console","log","contentType","addContentType","typeName","route","item","objects","path","id","addNode","eid","firstname","lastname","occupation","fields","body","registration"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAe;AAC9BA,EAAAA,GAAG,CAACC,UAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAe,iBAAMC,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACUN,KAAK,CAACO,GAAN,CAAU,wCAAV,CADV;;AAAA;AAAA;AACLC,cAAAA,IADK,SACLA,IADK;AAEbC,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAEMG,cAAAA,WAJO,GAIOL,KAAK,CAACM,cAAN,CAAqB;AACvCC,gBAAAA,QAAQ,EAAE,UAD6B;AAEvCC,gBAAAA,KAAK,EAAE;AAFgC,eAArB,CAJP;;AASb,mBAAWC,IAAX,IAAmBP,IAAI,CAACQ,OAAxB,EAAiC;AAC3BC,gBAAAA,IAD2B,uBACPF,IAAI,CAACG,EADE;AAE/BP,gBAAAA,WAAW,CAACQ,OAAZ,CAAoB;AAClBD,kBAAAA,EAAE,EAAEH,IAAI,CAACG,EADS;AAElBE,kBAAAA,GAAG,EAAEL,IAAI,CAACK,GAFQ;AAGlBC,kBAAAA,SAAS,EAAEN,IAAI,CAACM,SAHE;AAIlBC,kBAAAA,QAAQ,EAAEP,IAAI,CAACO,QAJG;AAKlBC,kBAAAA,UAAU,EAAER,IAAI,CAACQ,UALC;AAMlBN,kBAAAA,IAAI,EAAJA,IANkB;AAOlBO,kBAAAA,MAAM,EAAE;AACNC,oBAAAA,IAAI,EAAEV,IAAI,CAACW;AADL;AAPU,iBAApB;AAYD;;AAvBY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAf;;AAAA;AAAA;AAAA;AAAA;AA0BD,CA3BD","sourcesContent":["// Server API makes it possible to hook into various parts of Gridsome\n// on server-side and add custom data to the GraphQL data layer.\n// Learn more: https://gridsome.org/docs/server-api\n\n// Changes here require a server restart.\n// To restart press CTRL + C in terminal and run `gridsome develop`\nconst axios = require('axios');\n\nmodule.exports = function (api) {\n  api.loadSource(async store => {\n    const { data } = await axios.get('http://192.168.0.17:15000/api/employee')\n    console.log(data)\n\n    const contentType = store.addContentType({\n      typeName: 'Employee',\n      route: '/employee/:id'\n    })\n   \n    for (const item in data.objects) {\n      let path = `/employee/${item.id}`;\n      contentType.addNode({\n        id: item.id,\n        eid: item.eid,\n        firstname: item.firstname,\n        lastname: item.lastname,\n        occupation: item.occupation,\n        path,\n        fields: {\n          body: item.registration\n        }\n        \n      })\n    }\n    \n  })\n}\n"]}]}