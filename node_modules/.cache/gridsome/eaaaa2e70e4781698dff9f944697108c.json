{"remainingRequest":"/home/ian/Codes/fo-git/FieldOffice/node_modules/babel-loader/lib/index.js??ref--1-1!/home/ian/Codes/fo-git/FieldOffice/node_modules/gridsome/app/page-query/fetch.js","dependencies":[{"path":"/home/ian/Codes/fo-git/FieldOffice/node_modules/gridsome/app/page-query/fetch.js","mtime":499162500000},{"path":"/home/ian/Codes/fo-git/FieldOffice/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ian/Codes/fo-git/FieldOffice/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\nimport _JSON$stringify from \"/home/ian/Codes/fo-git/FieldOffice/node_modules/@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"/home/ian/Codes/fo-git/FieldOffice/node_modules/@babel/runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\n\n/* global GRIDSOME_MODE, GRIDSOME_DATA_DIR */\nimport { setResults } from './shared';\nimport { unslash } from '../utils/helpers';\nimport { NOT_FOUND_NAME, NOT_FOUND_PATH } from '../utils/constants';\nexport default (function (route, query) {\n  if (GRIDSOME_MODE === 'serve') {\n    var name = route.name,\n        page = route.params.page;\n    var path = page ? route.path.split('/').slice(0, -1).join('/') : route.path;\n    return new _Promise(function (resolve, reject) {\n      fetch(process.env.GRAPHQL_ENDPOINT, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          variables: {\n            page: page ? Number(page) : null,\n            path: name === NOT_FOUND_NAME ? NOT_FOUND_PATH : path || '/'\n          },\n          query: query\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        if (res.errors) reject(res.errors[0]);else if (!res.data) resolve(res);else setResults(route.path, res.data) && resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  } else if (GRIDSOME_MODE === 'static') {\n    return new _Promise(function (resolve, reject) {\n      var name = route.name,\n          isIndex = route.meta.isIndex;\n      var path = unslash(name === NOT_FOUND_NAME ? NOT_FOUND_PATH : route.path);\n      var jsonPath = unslash(isIndex === false ? \"\".concat(path, \".json\") : \"\".concat(path, \"/index.json\"));\n      import(\n      /* webpackChunkName: \"data/\" */\n      \"\".concat(GRIDSOME_DATA_DIR, \"/\").concat(jsonPath)).then(function (res) {\n        if (res.errors) reject(res.errors[0]);else setResults(route.path, res.data), resolve(res);\n      }).catch(function (err) {\n        reject(err);\n      });\n    });\n  }\n});",{"version":3,"sources":["/home/ian/Codes/fo-git/FieldOffice/node_modules/gridsome/app/page-query/fetch.js"],"names":["setResults","unslash","NOT_FOUND_NAME","NOT_FOUND_PATH","route","query","GRIDSOME_MODE","name","page","params","path","split","slice","join","resolve","reject","fetch","process","env","GRAPHQL_ENDPOINT","method","headers","body","variables","Number","then","res","json","errors","data","catch","err","isIndex","meta","jsonPath","GRIDSOME_DATA_DIR"],"mappings":"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","sourcesContent":["/* global GRIDSOME_MODE, GRIDSOME_DATA_DIR */\n\nimport { setResults } from './shared'\nimport { unslash } from '../utils/helpers'\nimport { NOT_FOUND_NAME, NOT_FOUND_PATH } from '../utils/constants'\n\nexport default (route, query) => {\n  if (GRIDSOME_MODE === 'serve') {\n    const { name, params: { page }} = route\n\n    const path = page\n      ? route.path.split('/').slice(0, -1).join('/')\n      : route.path\n\n    return new Promise((resolve, reject) => {\n      fetch(process.env.GRAPHQL_ENDPOINT, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          variables: {\n            page: page ? Number(page) : null,\n            path: name === NOT_FOUND_NAME ? NOT_FOUND_PATH : (path || '/')\n          },\n          query\n        })\n      })\n        .then(res => res.json())\n        .then(res => {\n          if (res.errors) reject(res.errors[0])\n          else if (!res.data) resolve(res)\n          else setResults(route.path, res.data) && resolve(res)\n        })\n        .catch(err => {\n          reject(err)\n        })\n    })\n  } else if (GRIDSOME_MODE === 'static') {\n    return new Promise((resolve, reject) => {\n      const { name, meta: { isIndex }} = route\n      const path = unslash(name === NOT_FOUND_NAME ? NOT_FOUND_PATH : route.path)\n      const jsonPath = unslash(isIndex === false ? `${path}.json` : `${path}/index.json`)\n\n      import(/* webpackChunkName: \"data/\" */ `${GRIDSOME_DATA_DIR}/${jsonPath}`)\n        .then(res => {\n          if (res.errors) reject(res.errors[0])\n          else (setResults(route.path, res.data), resolve(res))\n        })\n        .catch(err => {\n          reject(err)\n        })\n    })\n  }\n}\n"]}]}